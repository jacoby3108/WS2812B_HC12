ANSI-C/cC++ Compiler for HC12 V-5.0.38 Build 9056, Feb 26 2009

    1:  #include "mc9s12xdp512.h"
    2:  
    3:  
    4:  
    5:  #include <stdio.h>
    6:  #include "sci.h"
    7:  
    8:  #include "rti.h"
    9:  #include "pll_asm.h"
   10:  
   11:  #include "LEDscreen.h"
   12:  #include "ws2812b.h"
   13:  
   14:  #define _putchar            (void)putchar
   15:  #define _printf            (void)printf
   16:  
   17:  
   18:  // ===================================================================
   19:  //8 *32 Pixel WS2812B WS2812 Digital Color Flexible Led Panel Display
   20:  // ===================================================================
   21:  
   22:    
   23:  // LED Internal Structure 
   24:     
   25:  /*
   26:  typedef struct// es GRB
   27:  
   28:  {
   29:    unsigned char Green;
   30:    unsigned char Red ;
   31:    unsigned char Blue;
   32:    
   33:  }LEDSTR; 
   34:  
   35:  */
   36:  
   37:  
   38:  
   39:  int i,j;
   40:  
   41:  
   42:  
   43:  static void system_init(void);
   44:  /////void init_display(void);
   45:  
   46:  
   47:  void WS2812B_Test(void);
   48:  void LEDtest(void);
   49:  void LEDtest2(void);
   50:  void Scitest(void);
   51:  void pointerAccessTest(void);
   52:  void pointerAccessTest2(void);
   53:  
   54:  
   55:  
   56:  
   57:  
   58:  
   59:  
   60:                         
   61:  void main(void) {                  

Function: main
Source  : Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\Sources\main.c
Options : -CPUHCS12X -D__NO_FLOAT__ -Env"GENPATH=Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\bin;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\prm;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\cmd;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\Sources;C:\Archivos de programa\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Archivos de programa\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\Sources\DP256Reg;C:\Archivos de programa\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Archivos de programa\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"OBJPATH=Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\bin" -Env"TEXTPATH=Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\bin" -Lasm="Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\CLASE4_C_12X_RTI_Data\RAM\ObjectCode\main.c.o.lst" -Ms -Ot -ObjN="Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\CLASE4_C_12X_RTI_Data\RAM\ObjectCode\main.c.o" -WmsgSd1106

   62:                                     
   63:  
   64:  
   65:  
   66:   pointerAccessTest2();
  0000 160000       [4]     JSR   pointerAccessTest2
   67:    
   68:    
   69:   
   70:   system_init();
  0003 160000       [4]     JSR   system_init
   71:   
   72:   _asm cli;
  0006 10ef         [1]     CLI   
   73:   
   74:  //  for (;;)
   75:  //  Scitest();
   76:   
   77:  //  WS2812B_Test();
   78:  
   79:   LEDtest2();
  0008 060000       [3]     JMP   LEDtest2
   80:     
   81:   
   82:  }
   83:  
   84:  
   85:  
   86:  
   87:  static void system_init(void) 
   88:  {

Function: system_init
Source  : Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\Sources\main.c
Options : -CPUHCS12X -D__NO_FLOAT__ -Env"GENPATH=Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\bin;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\prm;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\cmd;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\Sources;C:\Archivos de programa\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Archivos de programa\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\Sources\DP256Reg;C:\Archivos de programa\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Archivos de programa\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"OBJPATH=Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\bin" -Env"TEXTPATH=Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\bin" -Lasm="Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\CLASE4_C_12X_RTI_Data\RAM\ObjectCode\main.c.o.lst" -Ms -Ot -ObjN="Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\CLASE4_C_12X_RTI_Data\RAM\ObjectCode\main.c.o" -WmsgSd1106

   89:  
   90:  
   91:    #ifdef FLASH     
   92:  
   93:      pll_init();	  // solo para flash  (ver config.h)
   94:  
   95:    #endif				     
   96:      
   97:      Sci_Init();
  0000 160000       [4]     JSR   Sci_Init
   98:  
   99:  
  100:      PORTA = 0x00;
  0003 790000       [3]     CLR   _PORTAB
  101:      DDRA = 0xFF;
  0006 c6ff         [1]     LDAB  #255
  0008 5b00         [2]     STAB  _DDRAB
  102:      
  103:  //    rti_init();
  104:  }
  000a 3d           [5]     RTS   
  105:  
  106:  
  107:  
  108:  //*************** TEST AREA ***************//
  109:  
  110:  //================================================
  111:  
  112:  
  113:  // This array is for testing WS2812B DIN on osciloscope
  114:  
  115:  //unsigned char temp[]={0x00,0xFF,0x00, 0xFF,0x00,0x00, 0x00,0x00,0xFF};
  116:  
  117:  //unsigned char temp[]={0x00,0x7F,0x00, 0x7F,0x00,0x00, 0x00,0x00,0x7F};
  118:  
  119:  //unsigned char temp[]={0x00,0x30,0x00, 0x30,0x00,0x00, 0x00,0x00,0x30};
  120:  
  121:  //unsigned char temp[]={0xff,0xfF,0xff, 0xfF,0xff,0xff, 0xff,0xff,0xfF};
  122:  
  123:  unsigned char temp[]={0xff,0xfF,0xff, 0xfF,0xff,0xff, 0xff,0xff,0xfF,
  124:  0xff,0xfF,0xff, 0xfF,0xff,0xff, 0xff,0xff,0xfF,0xff,0xff,0xfF,0xff,0xff,0xfF };
  125:  
  126:  
  127:  void WS2812B_Test(void) {

Function: WS2812B_Test
Source  : Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\Sources\main.c
Options : -CPUHCS12X -D__NO_FLOAT__ -Env"GENPATH=Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\bin;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\prm;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\cmd;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\Sources;C:\Archivos de programa\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Archivos de programa\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\Sources\DP256Reg;C:\Archivos de programa\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Archivos de programa\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"OBJPATH=Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\bin" -Env"TEXTPATH=Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\bin" -Lasm="Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\CLASE4_C_12X_RTI_Data\RAM\ObjectCode\main.c.o.lst" -Ms -Ot -ObjN="Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\CLASE4_C_12X_RTI_Data\RAM\ObjectCode\main.c.o" -WmsgSd1106

  128:  
  129:    
  130:   WS2812B_Init();
  0000 160000       [4]     JSR   WS2812B_Init
  131:   WS2812B_Set_Data_pointer(temp);
  0003 cc0000       [2]     LDD   #temp
  0006 160000       [4]     JSR   WS2812B_Set_Data_pointer
  132:   WS2812B_Set_Data_Length(sizeof(temp)/sizeof(temp[0]));
  0009 c618         [1]     LDAB  #24
  000b 87           [1]     CLRA  
  000c 160000       [4]     JSR   WS2812B_Set_Data_Length
  133:   WS2812B_Send_data();
  000f 160000       [4]     JSR   WS2812B_Send_data
  134:   for (;;) ;   // stop for test
  0012 20fe         [3]     BRA   *+0 ;abs = 0012
  135:   
  136:  
  137:  
  138:  
  139:  }
  140:  
  141:  /* This test sends data generated by LEDscreen.c 
  142:     to screen
  143:   */
  144:  
  145:  void LEDtest2(void) {

Function: LEDtest2
Source  : Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\Sources\main.c
Options : -CPUHCS12X -D__NO_FLOAT__ -Env"GENPATH=Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\bin;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\prm;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\cmd;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\Sources;C:\Archivos de programa\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Archivos de programa\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\Sources\DP256Reg;C:\Archivos de programa\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Archivos de programa\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"OBJPATH=Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\bin" -Env"TEXTPATH=Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\bin" -Lasm="Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\CLASE4_C_12X_RTI_Data\RAM\ObjectCode\main.c.o.lst" -Ms -Ot -ObjN="Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\CLASE4_C_12X_RTI_Data\RAM\ObjectCode\main.c.o" -WmsgSd1106

  146:    
  147:    unsigned char *pdata;  
  148:      
  149:      
  150:      LEDscreen_setMSJ("HOLA MUNDO");  
  0000 cc0000       [2]     LDD   #"HOLA MUNDO"
  0003 160000       [4]     JSR   LEDscreen_setMSJ
  151:         
  152:      pdata= (unsigned char*) LEDscreen_getScreenData();
  0006 160000       [4]     JSR   LEDscreen_getScreenData
  153:      
  154:      WS2812B_Init();
  0009 3b           [2]     PSHD  
  000a 160000       [4]     JSR   WS2812B_Init
  155:      
  156:      WS2812B_Set_Data_pointer(pdata);
  000d 3a           [3]     PULD  
  000e 160000       [4]     JSR   WS2812B_Set_Data_pointer
  157:      
  158:      WS2812B_Set_Data_Length(32*8*sizeof(LEDSTR));
  0011 8603         [1]     LDAA  #3
  0013 c7           [1]     CLRB  
  0014 160000       [4]     JSR   WS2812B_Set_Data_Length
  159:          
  160:      WS2812B_Send_data();
  0017 160000       [4]     JSR   WS2812B_Send_data
  161:  
  162:  
  163:      
  164:    ////  p2led3=(unsigned char (*)[TEST_COLS*sizeof(LEDSTR)])
  165:      
  166:         // ws2812B();
  167:      
  168:      LEDscreen_ShiftMSJ();
  001a 060000       [3]     JMP   LEDscreen_ShiftMSJ
  169:       
  170:      
  171:  }     
  172:  
  173:  
  174:  
  175:  
  176:  /* This test evaluates how much time 
  177:  takes the LEDscreen_setMSJ to update
  178:  the screen */
  179:  
  180:  void LEDtest(void) {

Function: LEDtest
Source  : Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\Sources\main.c
Options : -CPUHCS12X -D__NO_FLOAT__ -Env"GENPATH=Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\bin;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\prm;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\cmd;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\Sources;C:\Archivos de programa\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Archivos de programa\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\Sources\DP256Reg;C:\Archivos de programa\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Archivos de programa\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"OBJPATH=Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\bin" -Env"TEXTPATH=Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\bin" -Lasm="Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\CLASE4_C_12X_RTI_Data\RAM\ObjectCode\main.c.o.lst" -Ms -Ot -ObjN="Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\CLASE4_C_12X_RTI_Data\RAM\ObjectCode\main.c.o" -WmsgSd1106

  181:    
  182:    LEDscreen_setMSJ("HOLA mundo");
  0000 cc0000       [2]     LDD   #"HOLA mundo"
  0003 160000       [4]     JSR   LEDscreen_setMSJ
  183:      //programa principal                 
  184:      for(;;) {
  185:         
  186:           PORTA |= 0x01;
  0006 4c0001       [4]     BSET  _PORTAB,#1
  187:          
  188:         // LEDSTR *LEDscreen_getScreenData()
  189:         // ws2812B();
  190:          LEDscreen_ShiftMSJ();
  0009 160000       [4]     JSR   LEDscreen_ShiftMSJ
  191:           PORTA &= 0xFE;
  000c 4d0001       [4]     BCLR  _PORTAB,#1
  192:          
  193:         _asm nop;
  000f a7           [1]     NOP   
  194:         _asm nop;   
  0010 a7           [1]     NOP   
  195:         _asm nop;
  0011 a7           [1]     NOP   
  196:         _asm nop;
  0012 a7           [1]     NOP   
  0013 20f1         [3]     BRA   *-13 ;abs = 0006
  197:      }
  198:     
  199:    
  200:  }     
  201:  
  202:  
  203:  void Scitest(void) {

Function: Scitest
Source  : Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\Sources\main.c
Options : -CPUHCS12X -D__NO_FLOAT__ -Env"GENPATH=Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\bin;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\prm;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\cmd;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\Sources;C:\Archivos de programa\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Archivos de programa\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\Sources\DP256Reg;C:\Archivos de programa\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Archivos de programa\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"OBJPATH=Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\bin" -Env"TEXTPATH=Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\bin" -Lasm="Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\CLASE4_C_12X_RTI_Data\RAM\ObjectCode\main.c.o.lst" -Ms -Ot -ObjN="Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\CLASE4_C_12X_RTI_Data\RAM\ObjectCode\main.c.o" -WmsgSd1106

  204:    
  205:  ///////char c;
  206:    
  207:  //   c=Sci1_Gechar();
  208:  //    Sci1_Putchar(c+1);
  209:  
  210:  
  211:  
  212:      //_putchar(0xA5);       // SCI 0
  213:      //putchar(0xA5);         // SCI 0
  214:      //putchar(0xA5);          // SCI 0
  215:      //putchar(0xA5);           // SCI 0
  216:      
  217:      //_printf("  1234   ");         // SCI 0
  218:     
  219:     while (Sci1_GetQueueSatus()==EMPTY);           // SCI 1
  0000 160000       [4]     JSR   Sci1_GetQueueSatus
  0003 0451fa       [3]     TBEQ  B,*-3 ;abs = 0000
  220:     
  221:     Sci1_Putchar(Sci1_GetQueueData()+2);
  0006 160000       [4]     JSR   Sci1_GetQueueData
  0009 cb02         [1]     ADDB  #2
  000b 060000       [3]     JMP   Sci1_Putchar
  222:       
  223:      
  224:    
  225:    
  226:  }
  227:  
  228:  
  229:  unsigned char *p2led=NULL;
  230:  LEDSTR *p2led2=NULL;
  231:  
  232:  
  233:  #define TEST_COLS 4
  234:  #define TEST_ROWS 8 
  235:  
  236:  
  237:  ///
  238:  
  239:  LEDSTR TR_LedScreen1 [TR_RGB_ROWS][TR_RGB_COLS];
  240:  
  241:  
  242:  ///
  243:  
  244:  LEDSTR LedScreen1 [TEST_ROWS][TEST_COLS]={
  245:  {{0x01,0x02,0x03},{0x04,0x05,0x06},{0x07,0x08,0x09}},             // first 3 elem of first row (rest are zero)
  246:  {{0x10,0x20,0x30},{0x40,0x50,0x60},{0x70,0x80,0x90}},    // first 3 elem of second row (rest are zero)
  247:  {{0x11,0x12,0x13},{0x14,0x15,0x16},{0x17,0x18,0x19}}
  248:  };
  249:  
  250:  unsigned char DestLedScreen [TEST_ROWS*TEST_COLS*sizeof(LEDSTR)];
  251:  
  252:  /// 
  253:  
  254:  void pointerAccessTest(void)
  255:  {

Function: pointerAccessTest
Source  : Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\Sources\main.c
Options : -CPUHCS12X -D__NO_FLOAT__ -Env"GENPATH=Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\bin;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\prm;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\cmd;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\Sources;C:\Archivos de programa\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Archivos de programa\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\Sources\DP256Reg;C:\Archivos de programa\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Archivos de programa\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"OBJPATH=Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\bin" -Env"TEXTPATH=Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\bin" -Lasm="Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\CLASE4_C_12X_RTI_Data\RAM\ObjectCode\main.c.o.lst" -Ms -Ot -ObjN="Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\CLASE4_C_12X_RTI_Data\RAM\ObjectCode\main.c.o" -WmsgSd1106

  256:    
  257:    p2led=(unsigned char *)LedScreen1;  // This pointer will access array bytes
  0000 180300000000 [5]     MOVW  #LedScreen1,p2led
  258:    p2led2 =(LEDSTR *) LedScreen1;    // This pointer will access array elements
  0006 180300000000 [5]     MOVW  #LedScreen1,p2led2
  259:     
  260:    p2led2->Blue=255;
  000c c6ff         [1]     LDAB  #255
  000e fe0000       [3]     LDX   p2led2
  0011 6b02         [2]     STAB  2,X
  261:    p2led2++;
  0013 1a03         [2]     LEAX  3,X
  262:    p2led2->Red=255;
  0015 6b01         [2]     STAB  1,X
  263:    p2led2++;
  0017 1a03         [2]     LEAX  3,X
  0019 7e0000       [3]     STX   p2led2
  264:    p2led2->Green=255;
  001c 6bfb0000     [4]     STAB  [p2led2,PCR]
  265:  
  266:    for(i=0;i<24;i++){
  0020 18790000     [4]     CLRW  i
  0024 fe0000       [3]     LDX   p2led
  267:      
  268:        *p2led=0x33;
  0027 c633         [1]     LDAB  #51
  0029 6b30         [2]     STAB  1,X+
  002b 18720000     [5]     INCW  i
  002f fc0000       [3]     LDD   i
  0032 8c0018       [2]     CPD   #24
  0035 2df0         [3/1]   BLT   *-14 ;abs = 0027
  269:        p2led++;
  270:    }
  271:  
  272:  
  273:  }
  0037 7e0000       [3]     STX   p2led
  003a 3d           [5]     RTS   
  274:  
  275:  
  276:  unsigned char (*p2led3)[TEST_COLS*sizeof(LEDSTR)];  
  277:  LEDSTR (*p2LEDSTR)[TEST_COLS]=(LEDSTR*)0;
  278:  unsigned char test_col=0;
  279:  unsigned char test_row=0;
  280:  unsigned char color_counter=0;
  281:      
  282:  unsigned char *pc,nn;
  283:  unsigned char uc; 
  284:  LEDSTR Lstr;
  285:  
  286:  
  287:  
  288:  
  289:  void pointerAccessTest2(void)
  290:  {

Function: pointerAccessTest2
Source  : Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\Sources\main.c
Options : -CPUHCS12X -D__NO_FLOAT__ -Env"GENPATH=Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\bin;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\prm;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\cmd;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\Sources;C:\Archivos de programa\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Archivos de programa\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\Sources\DP256Reg;C:\Archivos de programa\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Archivos de programa\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"OBJPATH=Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\bin" -Env"TEXTPATH=Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\bin" -Lasm="Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\CLASE4_C_12X_RTI_Data\RAM\ObjectCode\main.c.o.lst" -Ms -Ot -ObjN="Z:\mi home\Documents\RGB LED Strip\HC12\WS2812B_HC12\CLASE4_C_12X_RTI_Data\RAM\ObjectCode\main.c.o" -WmsgSd1106

  291:    
  292:   
  293:    //
  294:    ////////  return (LEDSTR *)LedScreen;
  295:    
  296:    
  297:    p2led3=(unsigned char (*)[TEST_COLS*sizeof(LEDSTR)])LedScreen1; 
  0000 180300000000 [5]     MOVW  #LedScreen1,p2led3
  298:    pc= DestLedScreen;
  299:  
  300:    while (1){
  301:      
  302:    
  303:        
  304:    // *** THIS TAKES MUCH TIME (uses IDIV)           
  305:    /// uc=  *(*(p2led3 + row%TEST_ROWS)+col%TEST_COLS); 
  306:   
  307:   
  308:          //uc=  *(*(p2led3 + test_row)+test_col); 
  309:          pc=  (*(p2led3 + test_row)+test_col); 
  0006 c60c         [1]     LDAB  #12
  0008 b60000       [3]     LDAA  test_row
  000b 12           [1]     MUL   
  000c 3b           [2]     PSHD  
  000d f30000       [3]     ADDD  p2led3
  0010 b745         [1]     TFR   D,X
  0012 f60000       [3]     LDAB  test_col
  0015 87           [1]     CLRA  
  0016 1ae6         [2]     LEAX  D,X
  310:          uc=  p2led3[test_row][test_col];
  0018 e600         [3]     LDAB  0,X
  001a 7b0000       [3]     STAB  uc
  311:          p2LEDSTR=LedScreen1;
  001d 180300000000 [5]     MOVW  #LedScreen1,p2LEDSTR
  312:          
  313:          
  314:          p2LEDSTR++;
  0023 fd0000       [3]     LDY   p2LEDSTR
  0026 194c         [2]     LEAY  12,Y
  0028 7d0000       [3]     STY   p2LEDSTR
  315:          
  316:            Lstr=*p2LEDSTR[test_row];
  002b 18eb80       [4]     ADDY  0,SP
  002e a640         [3]     LDAA  0,Y
  0030 7a0000       [3]     STAA  Lstr
  0033 ec41         [3]     LDD   1,Y
  0035 7c0000       [3]     STD   Lstr:1
  317:          
  318:          
  319:          *pc++=uc;
  0038 f60000       [3]     LDAB  uc
  003b 6b30         [2]     STAB  1,X+
  003d 7e0000       [3]     STX   pc
  320:    
  321:          test_row++;
  0040 720000       [4]     INC   test_row
  322:          
  323:    
  324:      if(test_row == TEST_ROWS) {
  0043 f60000       [3]     LDAB  test_row
  0046 c108         [1]     CMPB  #8
  0048 1b82         [2]     LEAS  2,SP
  004a 265d         [3/1]   BNE   *+95 ;abs = 00a9
  325:        
  326:            test_col++;
  004c 720000       [4]     INC   test_col
  327:            test_row=0;
  004f 790000       [3]     CLR   test_row
  328:            
  329:      /* Finding transpose of matrix a[][] and storing it in array trans[][]. */
  330:      for(i=0; i<RGB_ROWS; ++i)
  0052 18790000     [4]     CLRW  i
  331:      for(j=0; j<RGB_COLS; ++j)
  0056 18790000     [4]     CLRW  j
  332:      {
  333:         TR_LedScreen1[j][i]=LedScreen1[i][j];
  005a fc0000       [3]     LDD   j
  005d cd0018       [2]     LDY   #24
  0060 13           [1]     EMUL  
  0061 b745         [1]     TFR   D,X
  0063 fc0000       [3]     LDD   i
  0066 cd0003       [2]     LDY   #3
  0069 13           [1]     EMUL  
  006a 1ae6         [2]     LEAX  D,X
  006c c60c         [1]     LDAB  #12
  006e 87           [1]     CLRA  
  006f fd0000       [3]     LDY   i
  0072 13           [1]     EMUL  
  0073 cd0003       [2]     LDY   #3
  0076 3b           [2]     PSHD  
  0077 fc0000       [3]     LDD   j
  007a 13           [1]     EMUL  
  007b e380         [3]     ADDD  0,SP
  007d b746         [1]     TFR   D,Y
  007f ecea0000     [4]     LDD   LedScreen1:1,Y
  0083 6ce20000     [3]     STD   TR_LedScreen1:1,X
  0087 e6ea0000     [4]     LDAB  LedScreen1,Y
  008b 6be20000     [3]     STAB  TR_LedScreen1,X
  008f 18720000     [5]     INCW  j
  0093 fc0000       [3]     LDD   j
  0096 8c0020       [2]     CPD   #32
  0099 1b82         [2]     LEAS  2,SP
  009b 2dbd         [3/1]   BLT   *-65 ;abs = 005a
  009d 18720000     [5]     INCW  i
  00a1 fc0000       [3]     LDD   i
  00a4 8c0008       [2]     CPD   #8
  00a7 2dad         [3/1]   BLT   *-81 ;abs = 0056
  00a9 060000       [3]     JMP   pointerAccessTest2:0x0006
  334:      }
  335:  
  336:        
  337:            
  338:            
  339:            
  340:            
  341:            
  342:      }
  343:      
  344:   
  345:   
  346:    
  347:    
  348:   // pc=*p2led3;     // Pointer to an array of 5 colums
  349:  
  350:   ///   p2led3++;
  351:    }
  352:  
  353:  }
  354:  
